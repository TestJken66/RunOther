name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # run every 1 hour
#   schedule:
#     #   分 时 日 月 周
#     - cron: '0 */1 * * *'

jobs:
  test:
    runs-on: macOS-11
    #runs-on: ubuntu-latest
    strategy:
      matrix:
        #api-level: [21, 22, 23, 24, 25, 26, 27, 28, 29]
        api-level: [ 21 ]
    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      
      - name: t
        shell: bash
        run: |
         echo "hekko"
         git clone https://oauth2:${{ secrets.GTOKEN }}@github.com/hhhaiai/FastUploadId.git
         echo "===============下载成功==============="
         ls
         echo "===============进入【FastUploadId】查看==============="
         cd FastUploadId
         ls
         chmod -R 777 *
         git config core.filemode false
         ./gradlew build
         echo "===============编译完成==============="
         ls
         apkpath=`find zip -name "*app1Debug*.apk"`
         cp $apkpath ../
         echo "拷贝1完毕"
         apkpath=`find zip -name "*app2Debug*.apk"`
         cp $apkpath ../
         echo "拷贝2完毕"
         cd ..
         echo "==========拷贝完毕====="
         echo "路径: $(pwd)"
         ls
         

#       - name: Gradle cache
#         uses: actions/cache@v2
#         with:
#           path: |
#             ~/.gradle/caches
#             ~/.gradle/wrapper
#           key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}

#       - name: AVD cache
#         uses: actions/cache@v2
#         id: avd-cache
#         with:
#           path: |
#             ~/.android/avd/*
#             ~/.android/adb*
#           key: avd-${{ matrix.api-level }}

#       - name: create AVD and generate snapshot for caching
#         if: steps.avd-cache.outputs.cache-hit != 'true'
#         uses: reactivecircus/android-emulator-runner@v2
#         with:
#           api-level: ${{ matrix.api-level }}
#           force-avd-creation: false
#           emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
#           disable-animations: false
#           script: echo "Generated AVD snapshot for caching."

